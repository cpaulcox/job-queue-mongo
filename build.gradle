plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.51"

}

   compileKotlin {
    kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    ext.junit_platform_ver = "1.1.0"
    ext.junit_jupiter_ver = "5.1.0"
    ext.log4j2_ver = "2.10.0"



dependencies {
    compile("org.jetbrains.kotlin:kotlin-compiler-embeddable")


       // Kotlin
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        compile "org.jetbrains.kotlin:kotlin-reflect"

        // Log4j2 + Jackson for YAML config support and SLF4J adapter
        compile("org.apache.logging.log4j:log4j-api:$log4j2_ver")
        compile("org.apache.logging.log4j:log4j-core:$log4j2_ver")
        compile("org.apache.logging.log4j:log4j-slf4j-impl:$log4j2_ver")
        compile("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6")
        compile("com.fasterxml.jackson.core:jackson-databind:2.9.6")
        compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"


        compile("io.javalin:javalin:1.6.1")

        // mongo
//        compile 'org.litote.kmongo:kmongo-native:3.8.0'  // to circumvent problems with Jackon and BSON
        compile 'org.litote.kmongo:kmongo:3.8.0'


        // Junit 5
        testCompile("org.junit.jupiter:junit-jupiter-api:$junit_jupiter_ver")
        testRuntime("org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_ver")
        testRuntime("org.junit.platform:junit-platform-launcher:$junit_platform_ver")
    }

    test {
        useJUnitPlatform()
//    testLogging {
//        events "passed", "skipped", "failed"
//    }
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '4.7'
    }


